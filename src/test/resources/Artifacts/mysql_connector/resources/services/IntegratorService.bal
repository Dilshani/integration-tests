package resources.services;

import ballerina.net.http;
import ballerina.lang.messages;
import ballerina.lang.errors;
import ballerina.lang.system;

@http:configuration {
    basePath:"/sql"
}
service <http> IntegratorService {

   @http:resourceConfig {
        methods:["POST"],
        path:"/insert/perRecord"
    }
    resource insertPerRecordToDBResource (message m) {
        message response = {};
        errors:Error err;
        json payload = messages:getJsonPayload(m);
        var keys, resultCount, err = insertPerRecordToDB(payload);
        if (err == null){
              string responsePayload;
              int length = lengthof keys;
              system:println(length);
              int i = 0;
              while (i<length){
                    if (i == 0){
                         responsePayload = keys[i];
                     }
                     else{
                        responsePayload = responsePayload + keys[i];
                    }
                    i = i+1;
              }
              responsePayload = responsePayload + "insertedRowCount:" + resultCount;
              messages:setStringPayload(response, responsePayload);
        }
        else{
              messages:setStringPayload(response, err.msg);
        }

        reply response;
    }

     @http:resourceConfig {
        methods:["POST"],
        path:"/insert/nonkey"
    }
     resource insertAutoGeneratedKeysNonKeyColResource (message m) {
        message response = {};
        errors:Error err;
        json payload = messages:getJsonPayload(m);
        var keys, resultCount, err = insertAutoGeneratedKeysNonKeyCol(payload);
        system:println("............................");
        system:println(resultCount);
        system:println("............................");
        if (err == null){
              string responsePayload;
              int length = lengthof keys;
              system:println("****************************");
              system:println(length);
              system:println("****************************");
              int i = 0;
              while (i<length){
                    if (i == 0){
                         responsePayload = keys[i];
                     }
                     else{
                        responsePayload = responsePayload + keys[i];
                    }
                    i = i+1;
              }
              responsePayload = responsePayload + "insertedRowCount:" + resultCount;
              messages:setStringPayload(response, responsePayload);
        }
        else{
              messages:setStringPayload(response, err.msg);
        }
        reply response;
    }

       @http:resourceConfig {
        methods:["POST"],
        path:"/insert/missingcol"
    }
     resource insertMissingColResource (message m) {
        message response = {};
        errors:Error err;
        json payload = messages:getJsonPayload(m);
        var keys, resultCount, err = insertWithMissingCol(payload);
        if (err == null){
              string responsePayload;
              int length = lengthof keys;
              system:println(length);
              int i = 0;
              while (i<length){
                    if (i == 0){
                         responsePayload = keys[i];
                     }
                     else{
                        responsePayload = responsePayload + keys[i];
                    }
                    i = i+1;
              }
              responsePayload = responsePayload + "insertedRowCount:" + resultCount;
              messages:setStringPayload(response, responsePayload);
        }
        else{
              messages:setStringPayload(response, err.msg);
        }
        reply response;
    }

}
